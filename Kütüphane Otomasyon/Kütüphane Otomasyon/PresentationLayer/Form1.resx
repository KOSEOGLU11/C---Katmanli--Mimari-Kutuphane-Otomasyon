<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>